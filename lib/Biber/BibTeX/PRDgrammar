BibFile : <skip: qr{ \s* (\%+[^\n]*\s*)* }x> Component(s) 
Component : Preamble(s) { 
          my @preambles = @{$item[1]};
          $return = { 'preamble' => \@preambles } 
      } 
      | String(s) { 
          my @str = @{$item[1]} ;
          $return = { 'strings' => \@str } ;
          # we perform the substitutions now
          foreach (@str) {
             my ($a, $b) = split(/\s*=\s*/, $_, 2) ;
             $b =~ s/^\s*"|"\s*$//g ;
             $text =~ s/$a\s*#?\s*(\{?)/$1$b/g
          }
      } 
      | Comment(s) { }
      | BibEntry(s) { 
          my @entries = @{$item[1]} ; 
          $return = { 'entries' => \@entries } 
      } 
Preamble : /\@PREAMBLE/i PreambleString
PreambleString : { 
          my $value = extract_bracketed($text, '{}') ;
          $value =~ s/^{(.*)}$/$1/s if $value ;
          $value =~ s/"\s*\n*\s*#\s*\n*\s*"/%\n/mg ;
          $value =~ s/^\s*"\s*//mg ;
          $value =~ s/\s*"\s*$//mg ;
          ($return) = $value if $value ;
}
String : /\@STRING/i StringArg 
StringArg : { 
          my $value = extract_bracketed($text, '{}') ;
          $value =~ s/\s*\n\s*/ /g ;
          ($return) = $value =~ /^{(.*)}$/s if $value ;
}
Comment : /\@COMMENT/i StringArg 
BibEntry : '@' Typename '{' Key ',' Field(s) '}' /\n*/ { 
          my %data = map { %$_ } @{$item[6]} ;
          $return = { $item[4] => {entrytype => lc($item[2]), %data } } 
}
Typename : /[A-Za-z\.\-]+/ 
Key : /[^,\s\n]+/
Field : Fieldname /\s*=\s*/ Fielddata /,?/ {
          $return = { lc($item[1]) => $item[3] } 
}
Fieldname : /\S+/
Fielddata : { 
          my $value = extract_bracketed($text, '{}') ;
          $value =~ s/\s*\n\s*/ /g ;
          ($return) = $value =~ /^{(.*)}$/s if $value ;
} 
| { my $value = extract_delimited($text, '"') ;#"'
          $value =~ s/\s*\n\s*/ /g ;
          ($return) = $value =~ /^"(.*)"$/s if $value ;
} 
| /[^,]+/ { 
          $return = $item[1] 
}

## COMPILE WITH
## perl -MParse::RecDescent - PRDgrammar Biber::BibTeX::Parser
__END__

=pod

=head1 NAME

C<Biber::BibTeX::Parser> - A Parse::RecDescent BibTeX parser

=head1 DESCRIPTION

This file was automatically generated by Parse::RecDescent from the file PRDgrammar

=head1 METHODS

=head2 new

This is to please Test::Pod::Coverage :)

=head1 AUTHOR

François Charette, C<< <firmicus at gmx.net> >>

=head1 BUGS

Please report any bugs or feature requests on our sourceforge tracker at
L<https://sourceforge.net/tracker2/?func=browse&group_id=228270>. 

=head1 COPYRIGHT & LICENSE

Copyright 2009 François Charette, all rights reserved.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

=cut

# vim: set tabstop=2 shiftwidth=2 expandtab:


