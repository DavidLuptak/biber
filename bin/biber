#!/usr/bin/perl 
#===============================================================================
#
#         FILE:  biber
#
#        USAGE:  biber [options] auxfile
#                Type biber -h or --help for details
#
#  DESCRIPTION:  A BibTeX replacement for users of biblatex
#
#               The biblatex package by Philipp Lehman is likely to become
#               the definitive citation management tool for LaTeX users.
#               Biblatex relies on the venerable bibtex program only for
#               sorting and generating a very generic bbl file without any
#               formatting instruction.  Everything else is taken care of by
#               biblatex. With Biber it is (will be) no longer necessary to
#               rely on BibTeX. For maximal portability, the current version
#               includes a BibTeX parser with a Parse::RecDescent grammar, but
#               if available it will use the faster Text::BibTeX module. The
#               objective of the first development phase is to have a robust
#               and reliable emulation of BibTeX with the biblatex.bst style
#               file. In other words, given the same aux file as input, to
#               output an identical bbl file as BibTeX would.
#               
#               This version also introduces support for a new XML format
#               tailored specifically for biblatex data: BibLaTeXML. It owes
#               its inspiration partly to the BibTeXML format, but it is far
#               more complex. A complete RelaXNG schema is provided, as well 
#               as a tool for converting bib files to biblatexml. To parse 
#               BibLaTeXML databases the perl module XML::LibXML is required.
#               
#               The advantages of no longer being dependent upon BibTeX are
#               obvious: full Unicode support, no memory limitations,
#               extensibility, etc. In the future, support for communication 
#               with databases (like Berkeley DB, SQLite, MySQL, PostgreSQL, eXisT) 
#               or remote resources via network protocols (such as SRU).
#
#               TODO
#               * use Log::Log4Perl 
#               * plugin facility
#               * add option --inputencoding <latin1> (only utf8 supported as of now)
#               * make available as par archive for maximal portability ?
#               * SEE also TODO's inserted below
#
# REQUIREMENTS:  Text::BibTeX or Parse::RecDescent; Regexp::Common; 
#                  LaTeX::Decode (included)
#         BUGS:  No doubt many... 
#       AUTHOR:  François Charette <firmicus ατ gmx δοτ net>
#      VERSION:  0.3
#      CREATED:  29/02/08 12:43:03 CET
#===============================================================================

use strict;
use warnings;
no warnings 'utf8';
use Carp;
use Data::Dumper;    # for debug only

# This is of course temporary...
use lib '/home/francois/dev/biblatex-biber/trunk/lib'; 

use Biber;

#---------------------------------------------------

use Getopt::Long qw/:config no_ignore_case/;
my $opts = {};
GetOptions(
    $opts,
    'fastsort|f!',
    'mincrossrefs|m=s',
    'unicodebbl|U!',
    'unicodebib|u!',
    'useprd|p!',
    'bibdata|d=s',
    'outfile|O=s',
    'allentries|a!',
    # 'convert|c=s',
    # 'type|t=s',
    'biberdebug|D!',
    'help|h|?',
    'version|v'
);

#--------------------------------------------------

use open IO => ':utf8';
#use open OUT => ':utf8';
#binmode( STDOUT, ':utf8' );

our $VERSION = $Biber::VERSION; 

die usage() if exists $opts->{'help'};

die version() if exists $opts->{'version'};

#--------------------------------------------------

# we can give a list of datafiles as argument, so
# this option is passed as an anon array
if ($opts->{bibdata}) {
    $opts->{bibdata} = [ split/,/, $opts->{bibdata} ] 
} ;

my $biber = Biber->new($opts);

#=====================================================
# Parse aux file
#=====================================================

my $auxfile;
my $bblfile; 

if ($opts->{allentries}) {
    if ($opts->{bibdata}) {
        $bblfile = $opts->{bibdata}->[0];
        $bblfile =~ s/\.[^.]+$/\.bbl/;
    }
    else {
        $auxfile = $ARGV[0] or croak usage();
        $auxfile .= '.aux' unless $auxfile =~ m/\.aux$/;
        $bblfile = $auxfile;
        $bblfile =~ s/aux$/bbl/;
        $biber->parse_auxfile($auxfile);
    }
}
else {
    $auxfile = $ARGV[0] or croak usage();
    $bblfile = $auxfile;
    $bblfile =~ s/aux$/bbl/;
    $biber->parse_auxfile($auxfile)
}

#=====================================================
# Parse/query database
#=====================================================

foreach my $bib (@{ $biber->config('bibdata') }) {
    if ($bib =~ /\.(db)?xml$/) {
        $biber->parse_biblatexml( $bib )
    }
    # TODO
#    elsif ($bib =~ /\.dbxml$/ ) {
#        my $xmlstring = $biber->dbxml_to_xml($bib);
#        $biber->parse_biblatexml( $xmlstring );
#    }
    elsif ($bib =~ /\.bib$/) {
        croak "File $bib does not exist!" unless -f $bib;
        $biber->parse_bibtex($bib)
    }
    else {
        croak "File $bib.bib does not exist!" unless -f "$bib.bib";
        $biber->parse_bibtex("$bib.bib")
    }
}

$biber->prepare; 

if ($biber->config('outfile')) {
    $bblfile = $biber->config('outfile')
};

$biber->output_to_bbl($bblfile);

#======================================================

sub version {
    my $me = "biber";    #basename($0);

    qq[
$me Version: $VERSION
      \n]
}

sub usage {
    my $me = "biber";    #basename($0);

    qq[
Usage:  $me <file>.aux
     Creates <file>.bbl

Options:
  --help|-h              Show this help message.
  --version|-v           Display version number.
  --mincrossrefs|-m <n>  Set treshold for crossrefs.
  --fastsort|-f          Do not use LaTeX_Decode and Unicode::Collate for sorting
  --useprd|-p            Force parsing with Parse::RecDescent
  --bibdata|-d <file>    Use <file> as the bibliography database
  --outfile|-O <file>    Output to <file> instead of <basename>.bbl
  --allentries|-a        Output all entries in the database
  --unicodebib|-u        Assume bib file is UTF-8 and skip latex_decode
  --unicodebbl|-U        Encode the bbl output in UTF-8
  --biberdebug|-D        Turn on debugging for biber
    \n]
}

# vim: set tabstop=4 shiftwidth=4:               

