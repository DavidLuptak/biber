#!/usr/bin/perl
use strict ;
use warnings ;
no warnings 'utf8' ;
use Carp ;

#This should be removed in the official distribution:
use FindBin ;
use lib "$FindBin::Bin/../lib" ;

use Biber ;
#---------------------------------------------------

use Getopt::Long qw/:config no_ignore_case/ ;
my $opts = {} ;
GetOptions(
    $opts,
    'fastsort|f!',
    'mincrossrefs|m=s',
    'unicodebbl|U!',
    'unicodebib|u!',
    'useprd|p!',
    'bibdata|d=s',
    'outfile|O=s',
    'allentries|a!',
    'validate|V!', 
    'biberdebug|D!',
    'help|h|?',
    'version|v'
) ;

#--------------------------------------------------

use open IO => ':utf8' ;

our $VERSION = $Biber::VERSION ; 

die usage() if exists $opts->{'help'} ;

die version() if exists $opts->{'version'} ;

#--------------------------------------------------

# we can give a list of datafiles as argument, so
# this option is passed as an anon array
if ($opts->{bibdata}) {
    $opts->{bibdata} = [ split /\s*,\s*/, $opts->{bibdata} ] 
} ;

my $biber = Biber->new($opts) ;

#=====================================================
# Parse aux file
#=====================================================

my $auxfile ;
my $bblfile ; 

if ($opts->{allentries}) {
    if ($opts->{bibdata}) {
        $bblfile = $opts->{bibdata}->[0] ;
        $bblfile =~ s/\.[^.]+$/\.bbl/ ;
    }
    else {
        $auxfile = $ARGV[0] or croak usage() ;
        $auxfile .= '.aux' unless $auxfile =~ m/\.aux$/ ;
        $bblfile = $auxfile ;
        $bblfile =~ s/aux$/bbl/ ;
        $biber->parse_auxfile($auxfile) ;
    }
}
else {
    $auxfile = $ARGV[0] or croak usage() ;
    $bblfile = $auxfile ;
    $bblfile =~ s/aux$/bbl/ ;
    $biber->parse_auxfile($auxfile)
}

#=====================================================
# Parse/query database
#=====================================================

foreach my $bib (@{ $biber->config('bibdata') }) {
    if ($bib =~ /\.(db)?xml$/) {
        $biber->parse_biblatexml( $bib )
    }
    elsif ($bib =~ /\.bib$/) {
        croak "File $bib does not exist!" unless -f $bib ;
        $biber->parse_bibtex($bib)
    }
    else {
        croak "File $bib.bib does not exist!" unless -f "$bib.bib" ;
        $biber->parse_bibtex("$bib.bib")
    }
}

if ($biber->config('biberdebug')) {
    $biber->dump('biber.dump1') ;
    print "Dumped initial biber object for debugging in file biber.dump1\n"
}

$biber->prepare ; 

if ($biber->config('biberdebug')) {
    $biber->dump('biber.dump2') ;
    print "Dumped final biber object for debugging in file biber.dump2\n"
}

if ($biber->config('outfile')) {
    $bblfile = $biber->config('outfile')
} ;

$biber->output_to_bbl($bblfile) ;

#======================================================

sub version {
    my $me = "biber" ;    #basename($0);

    qq[
$me Version: $VERSION
      \n]
}

sub usage {
    my $me = "biber" ;    #basename($0);

    qq[
Usage:  $me <file>.aux
     Creates <file>.bbl

Options:
  --help|-h              Show this help message.
  --version|-v           Display version number.
  --mincrossrefs|-m <n>  Set treshold for crossrefs.
  --fastsort|-f          Do not use LaTeX_Decode and Unicode::Collate for sorting
  --useprd|-p            Force parsing with Parse::RecDescent
  --bibdata|-d <file>    Use <file> as the bibliography database
  --outfile|-O <file>    Output to <file> instead of <basename>.bbl
  --allentries|-a        Output all entries in the database
  --unicodebib|-u        Assume bib file is UTF-8 and skip latex_decode
  --unicodebbl|-U        Encode the bbl output in UTF-8
  --biberdebug|-D        Turn on debugging for biber
    \n]
}

__END__

=pod

=head1 NAME

C<biber> - A bibtex replacement for users of biblatex

=head1 SYNOPSIS

biber [ { --bibdata | -d } database.{bib|xml|dbxml} ] [ --useprd | -p ] 
      [ --mincrossrefs | -m ] [ --fastsort | -f ] [ --unicodebib | -u ] 
      [ --unicodebbl | -U ] [ --biberdebug | -D ] [ { --outfile | -O } filename ] 
      file.aux

biber --bibdata database --allentries [ --outfile filename ] [ ... ]

biber { --help | --version }

=head1 DESCRIPTION

C<biber> provides a replacement of the bibtex processor for users of biblatex.
Besides emulating the functionality of bibtex + biblatex.bst, it also supports ...

(REST TO BE WRITTEN)

=head1 AUTHOR

François Charette, C<< <firmicus at gmx.net> >>

=head1 BUGS

Please report any bugs or feature requests on our sourceforge tracker at
L<https://sourceforge.net/tracker2/?func=browse&group_id=228270>. 

=head1 COPYRIGHT & LICENSE

Copyright 2009 François Charette, all rights reserved.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

=cut

# vim: set tabstop=4 shiftwidth=4:
