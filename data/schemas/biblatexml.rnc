# THIS IS AN EXPERIMENTAL ATTEMPT TO ADAPT and EXTEND BIBTEXML TO BIBLATEX
default namespace = "http://ankabut.net/biblatexml"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
datatypes xsd = "http://www.w3.org/2001/XMLSchema-datatypes"

start = entries
BibLaTeXML.xmlns.extra.attrib = empty
BibLaTeXML.xmlns.attrib = BibLaTeXML.xmlns.extra.attrib
BibLaTeXML.NamespaceDecl.attrib = BibLaTeXML.xmlns.attrib

BibLaTeXML.standard.entries =
  article
  | book
  | booklet
  | collection
  | inbook
  | incollection
  | proceedings
  | inproceedings
  | manual
  | misc
  | online
  | patent
  | periodical
  | proceedings
  | report
  | thesis
  | unpublished
    
#BibLaTeXML.custom.entries = empty
# custom[a-f] 

BibLaTeXML.additional.entries = 
review | 
review.electronic | 
article.electronic | 
periodical.electronic | 
preprint | 
software | 
movie
# TODO Unsupported types: artwork, audio, image, jurisdiction, legislation, legal, movie, music, performance, reference, inreference, review, software, standard, video
# TODO add manuscript and archivalrecord ?

BibLaTeXML.entries =
  BibLaTeXML.standard.entries | BibLaTeXML.additional.entries
#entry = element entry { attlist.entry, BibLaTeXML.entries }
#attlist.entry &= attribute id { text }

entries = element entries { attlist.entries, BibLaTeXML.entries* }
attlist.entries &= BibLaTeXML.NamespaceDecl.attrib

#########################################################
BibLaTeXML.common.fields =
  nameaddon? &
  shortauthor? &
  shorthand? &
  shorthandintro? &
  shorttitle? & 
  origtitle? &
  origyear? &
  language? &
  origlanguage? &
  script? & #added
  origscript? & #added
  abstract? &
  annotation? &
  (file|pdf)? &
  library? &
  # crossref? &
  #xref? &
  entrysubtype? &
  execute? &
  hyphenation? &
  indexsorttitle? &
  indextitle? &
  keywords? &
  label? &
  options? &
  presort? &
  (sortkey | key)? &
  sortname? &
  sorttitle? &
  sortyear? 


BibLaTeXML.additional.fields =
   reprintinfo* &
   reviews? &
   topics? &
   remarks?
# namea?,
# nameb?,
# namec?,
# nameatype?,
# namebtype?,
# namectype?,
# lista?,
# listb?,
# listc?,
# listd?,
# liste?,
# listf?,
# usera?,
# userb?,
# userc?,
# userd?,
# usere?,
# userf?,
# verba?,
# verbb?,
# verbc?

# 
# LITERAL FIELDS (incl. verbatim)

## non-biblatex fields
# affiliation?,
# contents?,
# copyright?,
# lccn?,
# mrnumber?,
# price?,
# size?,
# category?

#### private ##### 
# CARDBOX fields
# reprintinfo
# reviews <reviews> <review type="…" url="…" crossref="…" author="…"> text </review>
## mathreviews
## zblreviews
## histmathnr
# topics
## topic_culture
## topic_language
## topic_country
## topic_person
## topic_century
## topic_author
## topic_works

# additional fields for specific entry types:
#   reprinttitle?,
#   bookpagination?, -> attribute of pages
#   pagination?,         -> attribute of pages
#   editortype?,
#   isan?,
#   ismn?,
#   iswc?,
#   shortjournal?,
#   shortseries?,
#

#########################################################
## We now define the biblatexml elements

# many textual element can contain emphasis or superscript elements 
formattext = (emphasis?, superscript?, text?)*
emphasis = element emphasis { text }
superscript = element superscript { text }

# these are extensions for multilingual and multiscript bibliographies  
romanized.or.translated = element romanized { formattext }? & element translated {formattext}?    
romanized.or.uniform = element romanized { formattext }? & element uniform {formattext}?

abstract = element abstract { formattext }
addendum = element addendum { formattext }
annotation = element annotation { formattext }
booksubtitle = element booksubtitle { formattext, romanized.or.translated? }
booktitle = element booktitle { formattext, romanized.or.translated? }
booktitleaddon = element booktitleaddon { formattext, romanized.or.translated? }
chapter = element chapter { text }
doi = element doi { text }
eid = element eid { text }
file = element file { text }
pdf = element pdf { text }
# howpublished = element howpublished { text }  -> attribute
id = element id { text }
isan = element isan { text }
isbn = element isbn { text } # validate with pattern ?
oclc = element oclc { text } # validate with pattern ?
lccn = element lccn { text } # validate with pattern ?
ismn = element ismn { text }
isrn = element isrn { text }
issn = element issn { text }
issue = element issue { formattext, romanized.or.translated? }
issuetitle = element issuetitle { formattext, romanized.or.translated? }
issuetitleaddon = element issuetitleaddon { formattext, romanized.or.translated? }
issuesubtitle = element issuesubtitle { formattext, romanized.or.translated? }
iswc = element iswc { text }
journal = element journal { formattext, romanized.or.translated? }
journaltitle = element journaltitle { formattext, romanized.or.translated? }
journalsubtitle = element journalsubtitle { formattext, romanized.or.translated? }
label = element label { text }
library = element library { text | user+ }
user = element user {attribute id { text }, libraryitem+ }
libraryitem = element item { attribute location {text}?, attribute url {xsd:anyURI}?, text }
mainsubtitle = element mainsubtitle { formattext, romanized.or.translated? }
maintitle = element maintitle { formattext, romanized.or.translated? }
maintitleaddon = element maintitleaddon { formattext, romanized.or.translated? }
nameaddon = element nameaddon { text, romanized.or.translated? }
note = element note { formattext }
number = element number { text }
origtitle = element origtitle { formattext, element romanized {text}? }
pagetotal = element pagetotal { text }
part = element part { text }
reprinttitle = element reprinttitle { formattext, romanized.or.translated?}
series = element series { formattext, romanized.or.translated? }
shorthand = element shorthand { text }
shorthandintro = element shorthandintro { text }
shorttitle = element shorttitle { formattext }
subtitle = element subtitle { formattext, romanized.or.translated?}
title = element title { formattext, romanized.or.translated?}
titleaddon = element titleaddon { formattext, romanized.or.translated?}
url = element url { xsd:anyURI }
venue = element venue { formattext }
version = element version { text }
volume = element volume { text }
volumes = element volumes { text }
usera = element usera { text }
userb = element userb { text }
userc = element userc { text }
userd = element userd { text }
usere = element usere { text }
userf = element userf { text }

## special fields
crossref = element crossref { text }
entrysubtype = element entrysubtype { text }
execute = element execute { text }
hyphenation = element hyphenation { text }
indexsorttitle = element indexsorttitle { text }
indextitle = element indextitle { text }
options = element options { text | option+ }
option = element option { option.key, option.value }
option.key = element key { text }
option.value = element value { text }
presort = element presort { text }
sortkey = element sortkey { text }
key = element key { text }
sorttitle = element sorttitle { text }
sortyear = element sortyear { text }
useprefix = element useprefix { text }
xref = element xref { text }
# RANGE FIELDS
origyear = element origyear { text | range }
year = element year { attlist.year?, (text | range) }
attlist.year =
  attribute type { "approximate" }
range = range.start, range.end
range.start = element start { text }
range.end = element end { text }
pages = element pages { attlist.pages?, (text | range | pagelist ) }
pagelist = element list { text }
attlist.pages =
  attribute pagination { "page" | "column" | "line" | "verse" | "paragraph" | "none" },
  attribute bookpagination { "page" | "column" | "line" | "verse" | "paragraph" | "none" }
    
# INTEGER FIELDS
day = element day { xsd:integer }
edition = element edition { xsd:integer }
month = element month { xsd:integer }
urlday = element urlday { xsd:integer }
urlmonth = element urlmonth { xsd:integer }
urlyear = element urlyear { xsd:integer }
# DATE FIELDS
date = element date { xsd:date }
urldate = element urldate { xsd:date }
# LITERAL LISTS
attlist.lists = attribute andothers { "true" }
institution = element institution { attlist.lists?, ((text, romanized.or.translated?)  | itema+) }
school = element school { attlist.lists?, ((text, romanized.or.translated?) | itema+) }
location = element location { attlist.lists?, ((text, romanized.or.uniform?) | itemb+) }
address = element address { attlist.lists?, ((text, romanized.or.uniform?) | itemb+) }
organization = element organization { attlist.lists?, ((text, romanized.or.translated?) | itema+) }
origlocation = element origlocation { attlist.lists?, ((text, romanized.or.uniform?) | itemb+) }
publisher = element publisher { attlist.lists?, ((formattext, romanized.or.translated?) | itema+) }
lista = element lista { attlist.lists?, (text | item+) }
listb = element listb { attlist.lists?, (text | item+) }
listc = element listc { attlist.lists?, (text | item+) }
liste = element liste { attlist.lists?, (text | item+) }
listf = element listf { attlist.lists?, (text | item+) }
item = element item { formattext }
itema = element item { formattext, romanized.or.translated? }
itemb = element item { formattext, romanized.or.uniform? }
# KEY LISTS
# TODO add attribute type = babel, xml:lang, ISO-XXX etc 
language = element language { text | item+ }   #xml:lang ?
origlanguage = element origlanguage { text | item+ } # xml:lang ?
script = element script { text }
origscript = element origscript { text }
# NAME LISTS
attlist.author |= attribute type { "author" }?
attlist.author |= attribute gender { "sf" | "sm" | "sn" | "pf" | "pm" | "pn" | "pp" }?
attlist.author |= attlist.lists?
attlist.editor |= attribute type { "editor" | "compiler" }?
attlist.editor |= attribute gender { "sf" | "sm" | "sn" | "pf" | "pm" | "pn" | "pp" }?
attlist.editor |= attlist.lists?
author = element author { attlist.author, ((text, romanized.or.uniform?) | person+) }
editor = element editor { attlist.editor, ((text, romanized.or.uniform?) | person+) }
afterword = element afterword { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
annotator = element annotator { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
bookauthor = element bookauthor { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
commentator = element commentator { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
foreword = element foreword { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
holder = element holder { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
introduction = element introduction { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
redactor = element redactor { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
translator = element translator { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
shortauthor = element shortauthor { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
shorteditor = element shorteditor { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
sortname = element sortname { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
namea = element namea { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
nameb = element nameb { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
namec = element namec { attlist.lists?, ((text, romanized.or.uniform?) | person+) }
person =
  element person {
    attlist.person,
    ( (text, romanized.or.uniform?)
     | 
        (first, prefix?, last, suffix?, 
        (element romanized { first, prefix?, last, suffix? }? & element uniform { first, prefix?, last, suffix? }?)
       ))
  }
attlist.person |=
  attribute id { text }?,
  # ?
  attribute email { text }?,
  attribute url { text }?,
  # FIXME
  attribute yearofbirth { xsd:integer }?,
  attribute yearofdeath { xsd:integer }?,
  attribute gender { "male" | "female" }?
first = element first { text }
# initials = element initials { text }
last = element last { text }
# middle = element middle { text }
prefix = element prefix { text }
suffix = element suffix { text }
keywords |= element keywords { list {xsd:string+} | item+ }  #NB in biblatex this list is comma-separated, here it is separated by whitespace or itemized
reprintinfo = element reprintinfo { attlist.reprintinfo | text }
attlist.reprintinfo |=
   attribute crossref {text},
   attribute volume {text}?,
   attribute pages {text}?,
   attribute year {text}?,
   attribute note {text}?
reviews = element reviews {reviewitem*}
reviewitem = element item {attlist.review?, text?}
attlist.review |= 
   attribute type {text }?,
   attribute url {xsd:anyURI}?,
   attribute author { text }?,
   attribute note { text }?,
   attribute crossref {text }?
topics = element topics { topic* }
topic = element * {text}
remarks = element remarks {formattext|item+}
## culture
## language
## country
## person
## century
## author
## works
#########################################################
BibLaTeXML.article.standard.fields =
  author & # NB: this should be optional
  (journaltitle|journal) &
  ((((day?& month)|issue)?&year)|date) &
  editor? &
  shorteditor? &
  translator? &
  redactor? &
  annotator? &
  commentator? &
  subtitle? &
  titleaddon? &
  journalsubtitle? &
  issuetitle? &
  issuesubtitle? &
  issuetitleaddon? &
  series? &
  volume? &
  number? &
  location? & # added
  publisher? & #added
  eid? &
  pages? &
  note? &
  issn? &
  addendum? &
  doi? &
# url? &  
  (urldate | (urlday , urlmonth , urlyear))?
BibLaTeXML.article.fields =
  BibLaTeXML.article.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields

article = element entry { attlist.article, (title & url? & BibLaTeXML.article.fields) }
attlist.article = attribute id {text}, attribute entrytype { "article" }, attribute type {"printed"}?
#########################################################
# url mandatory if type is electronic
article.electronic = element entry {attlist.article.electronic, (url & title & BibLaTeXML.article.fields) }
attlist.article.electronic = attribute id {text}, attribute entrytype { "article" }, attribute type {"electronic"}
#########################################################
# for reviews we need attribute ref or title or both
review = element entry { attlist.review & (crossref | title) & 
              url? & BibLaTeXML.article.fields }
attlist.review = attribute id {text}, attribute entrytype { "review" }, attribute type {"printed"}?
#########################################################
# url mandatory if type is electronic
review.electronic = element entry { attlist.review.electronic & (crossref | title) &  
              url & BibLaTeXML.article.fields }
attlist.review.electronic = attribute id {text}, attribute entrytype { "review" }, attribute type {"electronic"}
#########################################################
BibLaTeXML.book.standard.fields =
  author? & #changed
  editor? & #changed
  title &
  year &
  shorteditor? &
  translator? &
  redactor? &
  annotator? &
  commentator? &
  introduction? &
  foreword? &
  afterword? &
  subtitle? &
  titleaddon? &
  maintitle? &
  mainsubtitle? &
  maintitleaddon? &
  volume? &
  part? &
  edition? &
  volumes? &
  series? &
  number? &
  note? &
  publisher? &
  location? &
  origlocation? &
  isbn? &
  oclc ? &
  lccn ? &
  issn? & #added
  chapter? &
  pages? &
  pagetotal? &
  addendum? &
  doi? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.book.fields =
  BibLaTeXML.book.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
book = element entry { attlist.book, BibLaTeXML.book.fields }
attlist.book = attribute id {text}, attribute entrytype {"book"}
#########################################################
BibLaTeXML.booklet.standard.fields =
  author? & #changed
  editor? & #changed
  title &
  year &
  subtitle? &
  titleaddon? &
  #howpublished? & -> attribute
  note? &
  location? &
  origlocation? &
  chapter? &
  pages? &
  pagetotal? &
  addendum? &
  doi? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.booklet.fields =
  BibLaTeXML.booklet.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
booklet = element entry { attlist.booklet, BibLaTeXML.booklet.fields }
attlist.booklet = attribute id {text}, attribute entrytype {"booklet"}, attribute type { text }?, attribute howpublished {text}?
#########################################################
BibLaTeXML.collection.standard.fields =
  editor? & # changed
  author? & #changed
  title &
  year &
  shorteditor? &
  translator? &
  redactor? &
  annotator? &
  commentator? &
  introduction? &
  foreword? &
  afterword? &
  subtitle? &
  titleaddon? &
  maintitle? &
  mainsubtitle? &
  maintitleaddon? &
  volume? &
  part? &
  edition? &
  volumes? &
  series? &
  number? &
  note? &
  publisher? &
  location? &
  origlocation? &
  isbn? &
  oclc ? &
  lccn ? &
  issn? &  #added 
  chapter? &
  pages? &
  pagetotal? &
  addendum? &
  doi? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.collection.fields =
  BibLaTeXML.collection.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
collection = element entry { attlist.collection, BibLaTeXML.collection.fields }
attlist.collection = attribute id {text}, attribute entrytype {"collection"} 
#########################################################   
BibLaTeXML.inbook.standard.fields =
  author &
  title &
  # year can be provided with crossref if it refers to multivolume work
  (((crossref | xref) & year?) | 
  (bookauthor? &
  # FIXME: this is probably too strict
  booktitle &
  maintitle? &
  mainsubtitle? &
  maintitleaddon? &
  booksubtitle? &
  booktitleaddon? &
  year & 
  editor? &
  shorteditor? &
  translator? &
  redactor? &
  annotator? &
  commentator? &
  introduction? &
  foreword? &
  afterword? &
  edition? &
  volumes? &
  series? &
  number? &
  publisher? &
  location? &
  origlocation? &
  issn? &  #added
  isbn? &
  oclc ? &
  lccn ? )) &
  subtitle? &
  titleaddon? &
  volume? &
  part? &
  note? &
  chapter? &
  pages? &
  addendum? &
  doi? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.inbook.fields =
  BibLaTeXML.inbook.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
inbook = element entry { attlist.inbook, BibLaTeXML.inbook.fields }
attlist.inbook = attribute id {text}, attribute entrytype {"inbook"} 
#########################################################
BibLaTeXML.incollection.standard.fields =
  author &
   title &
   subtitle? &
   titleaddon? &
  # year can be provided with crossref if it refers to multivolume work
  (((crossref | xref) & year?) | 
  ( editor? & # made it optional
  # FIXME: this is probably too strict
  booktitle &
  year &
  shorteditor? &
  translator? &
  redactor? &
  annotator? &
  commentator? &
  introduction? &
  foreword? &
  afterword? &
  maintitle? &
  mainsubtitle? &
  maintitleaddon? &
  booksubtitle? &
  booktitleaddon? &
  publisher? &
  volumes? &
  number? &
  location? &
  origlocation? &
  edition? &
  series? &
  issn? &  #added  
  isbn? &
  oclc ? &
  lccn ? )) & 
  volume? &
  part? &
  note? &
  chapter? &
  pages? &
  addendum? &
  doi? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.incollection.fields =
  BibLaTeXML.incollection.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
incollection = element entry { attlist.incollection, BibLaTeXML.incollection.fields }
attlist.incollection = attribute id {text}, attribute entrytype {"incollection"} 
#########################################################
BibLaTeXML.inproceedings.standard.fields =
  author &
  title &
  subtitle? &
  titleaddon? &
  (crossref | xref |
  (editor? &  # made it optional
  booktitle &
  year &
  shorteditor? &
  maintitle? &
  mainsubtitle? &
  maintitleaddon? &
  booksubtitle? &
  booktitleaddon? &
  venue? &
  volumes? &
  series? &
  number? &
  organization? &
  publisher? &
  location? &
  origlocation? &
  issn? &  #added  
  isbn? &
  oclc ? &
  lccn ?)) &
  volume? &
  part? &
  note? &
  chapter? &
  pages? &
  addendum? &
  doi? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?

BibLaTeXML.inproceedings.fields =
  BibLaTeXML.inproceedings.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
inproceedings = element entry { attlist.inproceedings, BibLaTeXML.inproceedings.fields }
attlist.inproceedings = attribute id {text}, attribute entrytype {"inproceedings"}
#########################################################
BibLaTeXML.manual.standard.fields =
  (author|editor) &
  title &
  year &
  subtitle? &
  titleaddon? &
  edition? &
  version? &
  series? &
  number? &
  note? &
  organization? &
  publisher? &
  location? &
  origlocation? &
  isbn? &
  oclc ? &
  lccn ? &
  chapter? &
  pages? &
  pagetotal? &
  addendum? &
  doi? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.manual.fields =
  BibLaTeXML.manual.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
manual = element entry { attlist.manual, BibLaTeXML.manual.fields }
attlist.manual = attribute id {text}, attribute entrytype {"manual"}, attribute type { text }?
#########################################################
BibLaTeXML.misc.standard.fields =
  (author|editor)? &
  title &
  ((day? & month? & year)|date) &
  subtitle? &
  titleaddon? &
#  howpublished? & -> attribute
  version? &
  note? &
  organization? &
  publisher? &
  location? &
  origlocation? &
  addendum? &
  doi? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.misc.fields =
  BibLaTeXML.misc.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
misc = element entry { attlist.misc, BibLaTeXML.misc.fields }
attlist.misc = attribute id {text}, attribute entrytype {"misc"}, attribute type { text }?, attribute howpublished {text}?
#########################################################
BibLaTeXML.online.standard.fields =
  (author|editor) &
  title &
  ((day? & month? & year)|date) &
  url & 
  subtitle? &
  titleaddon? &
  note? &
  organization? &
  addendum? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.online.fields =
  BibLaTeXML.online.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
online = element entry { attlist.online, BibLaTeXML.online.fields }
attlist.online = attribute id {text}, attribute entrytype {"online"}
#########################################################
BibLaTeXML.patent.standard.fields =
  author &
  title &
  number &
  ((day? & month? & year)|date) &
  holder? &
  subtitle? &
  titleaddon? &
  version? &
  location? &
  origlocation? &
  note? &
  addendum? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.patent.fields =
  BibLaTeXML.patent.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
patent = element entry { attlist.patent, BibLaTeXML.patent.fields }
attlist.patent = attribute id {text}, attribute entrytype {"patent"}, attribute type { text }?
#########################################################
BibLaTeXML.periodical.standard.fields =
  editor? &  # made it optional
  (journal|journaltitle) & # CHANGED from title 
  ((((day? & month)|issue)? & year)|date) &
  shorteditor? &
  introduction? &
  subtitle? &
  issuetitle? &
  issuesubtitle? &
  issuetitleaddon? &
  (pagetotal|pages)? &  # added
  series? &
  volume? &
  number? &
  note? &
  issn? &
  addendum? &
  doi? &
#  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.periodical.fields =
  BibLaTeXML.periodical.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
periodical = element entry { attlist.periodical, (url? & BibLaTeXML.periodical.fields) }
attlist.periodical = attribute id {text}, attribute entrytype {"periodical"}, attribute type {"printed"}?
#########################################################
# url mandatory if type is electronic
periodical.electronic = element entry { attlist.periodical.electronic, (url & BibLaTeXML.periodical.fields) }
attlist.periodical.electronic = attribute id {text}, attribute entrytype {"periodical"}, attribute type {"electronic"}
#########################################################
BibLaTeXML.proceedings.standard.fields =
  editor? & # made it optional
  title &
  year &
  shorteditor? &
  subtitle? &
  titleaddon? &
  maintitle? &
  mainsubtitle? &
  maintitleaddon? &
  venue? &
  volume? &
  part? &
  volumes? &
  series? &
  number? &
  note? &
  organization? &
  publisher? &
  location? &
  origlocation? &
  isbn? &
  issn? &  #added
  oclc ? &
  lccn ? &
  chapter? &
  pages? &
  pagetotal? &
  addendum? &
  doi? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.proceedings.fields =
  BibLaTeXML.proceedings.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
proceedings = element entry { attlist.proceedings, BibLaTeXML.proceedings.fields }
attlist.proceedings = attribute id {text}, attribute entrytype {"proceedings"}
#########################################################
BibLaTeXML.report.standard.fields =
  author &
  title &
  institution &
  year &
  subtitle? &
  titleaddon? &
  series? &
  number? &
  version? &
  note? &
  location? &
  origlocation? &
  isrn? &
  chapter? &
  pages? &
  pagetotal? &
  addendum? &
  doi? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.report.fields =
    BibLaTeXML.report.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
report = element entry { attlist.report, BibLaTeXML.report.fields }
attlist.report = attribute id {text}, attribute entrytype {"report"}, attribute type { text }
#########################################################
BibLaTeXML.thesis.standard.fields =
  author &
  title &
  (institution|school) &
  year &
  subtitle? &
  titleaddon? &
  note? &
  location? &
  origlocation? &
  chapter? &
  pages? &
  pagetotal? &
  volumes? & #added
  isbn? & #added
  oclc ? &
  lccn ? &
  addendum? &
  doi? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.thesis.fields =
  BibLaTeXML.thesis.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
thesis = element entry { attlist.thesis, BibLaTeXML.thesis.fields }
attlist.thesis = attribute id {text}, attribute entrytype {"thesis"}, attribute type { text }
#########################################################
BibLaTeXML.unpublished.standard.fields =
  author &
  title &
  ((day? & month? & year)|date)? &
  subtitle? &
  titleaddon? &
  institution? & #added
  pagetotal? & #added
  note? &
  addendum? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
 
BibLaTeXML.unpublished.fields =
  BibLaTeXML.unpublished.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
unpublished = element entry { attlist.unpublished, BibLaTeXML.unpublished.fields }
attlist.unpublished = attribute id {text}, attribute entrytype {"unpublished"} 
#########################################################
BibLaTeXML.preprint.standard.fields =
  author &
  title &
  ((day? & month? & year)|date) &
  institution? &
  location? &
  subtitle? &
  titleaddon? &
  series? &
  pagetotal? & 
  note? &
  addendum? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
  
BibLaTeXML.preprint.fields =
  BibLaTeXML.preprint.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
preprint = element entry { attlist.preprint, BibLaTeXML.preprint.fields }
attlist.preprint = attribute id {text}, attribute entrytype {"preprint"}
#########################################################
software = element entry { attribute id {text}, attribute entrytype {"software"}, BibLaTeXML.misc.fields }
#########################################################
movie = element entry { attribute id {text}, attribute entrytype {"movie"}, BibLaTeXML.misc.fields }