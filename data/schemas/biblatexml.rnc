default namespace = "http://ankabut.net/biblatexml"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
datatypes xsd = "http://www.w3.org/2001/XMLSchema-datatypes"

start = entries

BibLaTeXML.standard.entries =
  article
  | book
  | booklet
  | collection
  | inbook
  | incollection
  | proceedings
  | inproceedings
  | manual
  | misc
  | online
  | patent
  | periodical
  | proceedings
  | report
  | thesis
  | unpublished
#TODO | set
    
BibLaTeXML.additional.entries = 
review | 
review.electronic | 
article.electronic | 
periodical.electronic | 
preprint | 
software | 
movie
# TODO Unsupported types: artwork, audio, image, jurisdiction, legislation, legal, movie, music, performance, reference, inreference, review, software, standard, video
# TODO add manuscript and archivalrecord ?

BibLaTeXML.entries =
  BibLaTeXML.standard.entries | BibLaTeXML.additional.entries

entries = element entries { BibLaTeXML.entries* }

#########################################################
BibLaTeXML.common.fields =
  nameaddon? &
  shortauthor? &
  shorthand? &
  shorthandintro? &
  shorttitle? & 
  origtitle? &
  origyear? &
  language? &
  origlanguage? &
  script? & 
  origscript? & 
  abstract? &
  annotation? &
  (file|pdf)? &
  user* &
  entrysubtype? &
  execute? &
  hyphenation? &
  indexsorttitle? &
  indextitle? &
  keywords? &
  label? &
  options? &
  presort? &
  (sortkey | key)? &
  sortname? &
  sorttitle? &
  sortyear? 


BibLaTeXML.additional.fields =
   reprintinfo* &
   reviews? &
   topics? &
   remarks?


#########################################################
## We now define the biblatexml elements

## many textual element can contain emphasis or superscript elements 
formattext = (nosort?, emphasis?, superscript?, subscript?, text?)*
emphasis = element emphasis { text }
superscript = element superscript { text }
subscript = element subscript { text }
nosort = element nosort { text }

romanized = attribute mode { "romanized" }    
translated = attribute mode { "translated" }
uniform = attribute mode { "uniform" }

abstract = element abstract { formattext }
addendum = element addendum { formattext }
annotation = element annotation { formattext }
booksubtitle = ( element booksubtitle { formattext },
                element booksubtitle { romanized, formattext }?,
                element booksubtitle { translated, formattext }? ) |
                ( element booksubtitle { romanized, formattext },
                  element booksubtitle { translated, formattext }? ) |
                ( element booksubtitle { translated, formattext } )
booktitle = ( element booktitle { formattext },
             element booktitle { romanized, formattext }?,
             element booktitle { translated, formattext }? ) |
             ( element booktitle { romanized, formattext },
               element booktitle { translated, formattext }? ) |
             ( element booktitle { translated, formattext } )
booktitleaddon = ( element booktitleaddon { formattext },
                  element booktitleaddon { romanized, formattext }?,
                  element booktitleaddon { translated, formattext }? ) |
                  ( element booktitleaddon { romanized, formattext },
                    element booktitleaddon { translated, formattext }? ) |
                  ( element booktitleaddon { translated, formattext } )
chapter = element chapter { text }
doi = element doi { text }
eid = element eid { text }
eprint = element eprint { text }
eprinttype = element eprinttype { text }
file = element file { text }
pdf = element pdf { text }
id = element id { text }
isan = element isan { text }
isbn = element isbn { text } # validate with pattern ?
oclc = element oclc { text } # validate with pattern ?
lccn = element lccn { text } # validate with pattern ?
ismn = element ismn { text }
isrn = element isrn { text }
issn = element issn { text }
issue = ( element issue { formattext },
         element issue { romanized, formattext }?,
         element issue { translated, formattext }? ) |
         ( element issue { romanized, formattext },
           element issue { translated, formattext }? ) |
         ( element issue { translated, formattext } )
issuetitle = ( element issuetitle { formattext },
              element issuetitle { romanized, formattext }?,
              element issuetitle { translated, formattext }? ) |
              ( element issuetitle { romanized, formattext },
                element issuetitle { translated, formattext }? ) |
              ( element issuetitle { translated, formattext } )
issuetitleaddon = ( element issuetitleaddon { formattext },
                   element issuetitleaddon { romanized, formattext }?,
                   element issuetitleaddon { translated, formattext }? ) |
                   ( element issuetitleaddon { romanized, formattext },
                     element issuetitleaddon { translated, formattext }? ) |
                   ( element issuetitleaddon { translated, formattext } )
issuesubtitle = ( element issuesubtitle { formattext },
                 element issuesubtitle { romanized, formattext }?,
                 element issuesubtitle { translated, formattext }? ) |
                 ( element issuesubtitle { romanized, formattext },
                   element issuesubtitle { translated, formattext }? ) |
                 ( element issuesubtitle { translated, formattext } )
iswc = element iswc { text }
journal = ( element journal { formattext },
           element journal { romanized, formattext }?,
           element journal { translated, formattext }? ) |
           ( element journal { romanized, formattext },
             element journal { translated, formattext }? ) |
           ( element journal { translated, formattext } )
journaltitle = ( element journaltitle { formattext },
                element journaltitle { romanized, formattext }?,
                element journaltitle { translated, formattext }? ) |
                ( element journaltitle { romanized, formattext },
                  element journaltitle { translated, formattext }? ) |
                ( element journaltitle { translated, formattext } )
journalsubtitle = ( element journalsubtitle { formattext },
                   element journalsubtitle { romanized, formattext }?,
                   element journalsubtitle { translated, formattext }? ) |
                   ( element journalsubtitle { romanized, formattext },
                     element journalsubtitle { translated, formattext }? ) |
                   ( element journalsubtitle { translated, formattext } )
label = element label { text }
## this element contains data relative to individual users of the database
user = element user { attribute id {text} & library? & remarks? & topics? } 
library = element library { libraryitem+ }
libraryitem = element item { attribute location {text}?, 
                             attribute ref {text}?, 
                             attribute url {xsd:anyURI}?, 
                             attribute note {text}? }
mainsubtitle = ( element mainsubtitle { formattext },
                element mainsubtitle { romanized, formattext }?,
                element mainsubtitle { translated, formattext }? ) |
                ( element mainsubtitle { romanized, formattext },
                  element mainsubtitle { translated, formattext }? ) |
                ( element mainsubtitle { translated, formattext } )
maintitle = ( element maintitle { formattext },
             element maintitle { romanized, formattext }?,
             element maintitle { translated, formattext }? ) |
             ( element maintitle { romanized, formattext },
               element maintitle { translated, formattext }? ) |
             ( element maintitle { translated, formattext } )
maintitleaddon = ( element maintitleaddon { formattext },
                  element maintitleaddon { romanized, formattext }?,
                  element maintitleaddon { translated, formattext }? ) |
                  ( element maintitleaddon { romanized, formattext },
                    element maintitleaddon { translated, formattext }? ) |
                  ( element maintitleaddon { translated, formattext } )
nameaddon = ( element nameaddon { text },
             element nameaddon { romanized, text }?,
             element nameaddon { translated, text }? ) |
             ( element nameaddon { romanized, text },
               element nameaddon { translated, text }? ) |
             ( element nameaddon { translated, text } )
note = element note { formattext }
number = element number { text }
origtitle = element origtitle { formattext, element romanized {text}? }
pagetotal = element pagetotal { text }
part = element part { text }
reprinttitle = ( element reprinttitle { formattext },
                element reprinttitle { romanized, formattext }?,
                element reprinttitle { translated, formattext }? ) |
                ( element reprinttitle { romanized, formattext },
                  element reprinttitle { translated, formattext }? ) |
                ( element reprinttitle { translated, formattext } )
series = ( element series { (formattext | item+) },
          element series { romanized, (formattext | item+) }?,
          element series { translated, (formattext | item+) }? ) |
          ( element series { romanized, (formattext | item+) },
            element series { translated, (formattext | item+) }? ) |
          ( element series { translated, (formattext | item+) } )
#shorthand = element shorthand { text }
shorthand = ( element shorthand { text },
             element shorthand { romanized, text }?,
             element shorthand { translated, text }? ) | 
             ( element shorthand { romanized, text },
             element shorthand { translated, text }? ) |
             ( element shorthand { translated, text } )
#shorthandintro = element shorthandintro { text }
shorthandintro = ( element shorthandintro { text },
             element shorthandintro { romanized, text }?,
             element shorthandintro { translated, text }? ) | 
             ( element shorthandintro { romanized, text },
             element shorthandintro { translated, text }? ) |
             ( element shorthandintro { translated, text } )
shorttitle = ( element shorttitle { formattext },
             element shorttitle { romanized, formattext }?,
             element shorttitle { translated, formattext }? ) | 
             ( element shorttitle { romanized, formattext },
             element shorttitle { translated, formattext }? ) |
             ( element shorttitle { translated, formattext } )
subtitle = ( element subtitle { formattext },
            element subtitle { romanized, formattext }?,
            element subtitle { translated, formattext }? ) |
            ( element subtitle { romanized, formattext },
              element subtitle { translated, formattext }? ) |
            ( element subtitle { translated, formattext } )
title = ( element title { formattext },
         element title { romanized, formattext }?,
         element title { translated, formattext }? ) |
         ( element title { romanized, formattext },
           element title { translated, formattext }? ) |
         ( element title { translated, formattext } )
titleaddon = ( element titleaddon { formattext },
              element titleaddon { romanized, formattext }?,
              element titleaddon { translated, formattext }? ) |
              ( element titleaddon { romanized, formattext },
                element titleaddon { translated, formattext }? ) |
              ( element titleaddon { translated, formattext } )
url = element url { xsd:anyURI }
#venue = element venue { formattext }
venue = ( element venue { formattext },
         element venue { romanized, formattext }?,
         element venue { translated, formattext }? ) |
         ( element venue { romanized, formattext },
           element venue { translated, formattext }? ) |
         ( element venue { translated, formattext } )
version = element version { text }
volume = element volume { text }
volumes = element volumes { text }
usera = element usera { text }
userb = element userb { text }
userc = element userc { text }
userd = element userd { text }
usere = element usere { text }
userf = element userf { text }

## special fields
crossref = element crossref { text }
entrysubtype = element entrysubtype { text }
execute = element execute { text }
hyphenation = element hyphenation { text }
indexsorttitle = element indexsorttitle { text }
indextitle = element indextitle { text }
options = element options { text | option+ }
option = element option { option.key, option.value }
option.key = element key { text }
option.value = element value { text }
presort = element presort { text }
sortkey = element sortkey { text }
key = element key { text }
#sorttitle = element sorttitle { text }
sorttitle = ( element sorttitle { formattext },
         element sorttitle { romanized, formattext }?,
         element sorttitle { translated, formattext }? ) |
         ( element sorttitle { romanized, formattext },
           element sorttitle { translated, formattext }? ) |
         ( element sorttitle { translated, formattext } )
sortyear = element sortyear { text }
useprefix = element useprefix { text }
xref = element xref { text }
# RANGE FIELDS
origyear = element origyear { text | range }
year = element year { attlist.year?, (text | range), localyear? }

# approximate when exact date is uncertain, 
# assumed when it is known but not stated on the document
# and converted when it is stated in a different calendar
attlist.year =
  attribute type { "approximate" | "assumed" | "converted" }
localyear = element localyear { attlist.localyear, (text | range)}
attlist.localyear =
  attribute calendar { "julian" | "hebrew" | "islamic" | "hijrishamsi" | "revolutionary" },
  attribute note { text }?
range = range.start, range.end
range.start = element start { text }
range.end = element end { text }
pages = element pages { attlist.pages?, (text | range | pagelist ) }
pagelist = element list { text }
attlist.pages =
  attribute pagination { "page" | "column" | "line" | "verse" | "paragraph" | "none" }?,
  attribute bookpagination { "page" | "column" | "line" | "verse" | "paragraph" | "none" }?,
  attribute part { text }? # e.g. when a book has parts in different scripts, with respective paginations
    
# INTEGER FIELDS
day = element day { xsd:integer }
edition = element edition { xsd:integer | ( attribute string { text } ) }
month = element month { xsd:integer }
urlday = element urlday { xsd:integer }
urlmonth = element urlmonth { xsd:integer }
urlyear = element urlyear { xsd:integer }
# DATE FIELDS
date = element date { xsd:date }
urldate = element urldate { xsd:date }
# LITERAL LISTS
attlist.lists = attribute andothers { "true" }
institution = ( element institution { attlist.lists?, (text | item+) },
               element institution { attlist.lists?, romanized, (text | item+) }?,
               element institution { attlist.lists?, translated, (text | item+) }? ) |
               ( element institution { attlist.lists?, romanized, (text | item+) },
                 element institution { attlist.lists?, translated, (text | item+) }? ) |
               ( element institution { attlist.lists?, translated, (text | item+) } )
school = ( element school { attlist.lists?, (text | item+) },
          element school { attlist.lists?, romanized, (text | item+) }?,
          element school { attlist.lists?, translated, (text | item+) }? ) |
          ( element school { attlist.lists?, romanized, (text | item+) },
            element school { attlist.lists?, translated, (text | item+) }? ) |
          ( element school { attlist.lists?, translated, (text | item+) } )
location = ( element location { attlist.lists?, (text | item+) },
            element location { attlist.lists?, romanized, (text | item+) }?,
            element location { attlist.lists?, uniform, (text | item+) }? ) |
            ( element location { attlist.lists?, romanized, (text | item+) },
              element location { attlist.lists?, uniform, (text | item+) }? ) |
            ( element location { attlist.lists?, uniform, (text | item+) } )
address = ( element address { attlist.lists?, (text | item+) },
           element address { attlist.lists?, romanized, (text | item+) }?,
           element address { attlist.lists?, uniform, (text | item+) }? ) |
           ( element address { attlist.lists?, romanized, (text | item+) },
             element address { attlist.lists?, uniform, (text | item+) }? ) |
           ( element address { attlist.lists?, uniform, (text | item+) } )
organization = ( element organization { attlist.lists?, (text | item+) },
                element organization { attlist.lists?, romanized, (text | item+) }?,
                element organization { attlist.lists?, translated, (text | item+) }? ) |
                ( element organization { attlist.lists?, romanized, (text | item+) },
                  element organization { attlist.lists?, translated, (text | item+) }? ) |
                ( element organization { attlist.lists?, translated, (text | item+) } )
origlocation = ( element origlocation { attlist.lists?, (text | item+) },
                element origlocation { attlist.lists?, romanized, (text | item+) }?,
                element origlocation { attlist.lists?, uniform, (text | item+) }? ) |
                ( element origlocation { attlist.lists?, romanized, (text | item+) },
                  element origlocation { attlist.lists?, uniform, (text | item+) }? ) |
                ( element origlocation { attlist.lists?, uniform, (text | item+) } )
publisher = ( element publisher { attlist.lists?, (formattext | item+) },
             element publisher { attlist.lists?, romanized, (formattext | item+) }?,
             element publisher { attlist.lists?, translated, (formattext | item+) }? ) |
             ( element publisher { attlist.lists?, romanized, (formattext | item+) },
               element publisher { attlist.lists?, translated, (formattext | item+) }? ) |
             ( element publisher { attlist.lists?, translated, (formattext | item+) } )
origpublisher = ( element origpublisher { attlist.lists?, (formattext | item+) },
                 element origpublisher { attlist.lists?, romanized, (formattext | item+) }?,
                 element origpublisher { attlist.lists?, translated, (formattext | item+) }? ) |
                 ( element origpublisher { attlist.lists?, romanized, (formattext | item+) },
                   element origpublisher { attlist.lists?, translated, (formattext | item+) }? ) |
                 ( element origpublisher { attlist.lists?, translated, (formattext | item+) } )
lista = element lista { attlist.lists?, (text | item+) }
listb = element listb { attlist.lists?, (text | item+) }
listc = element listc { attlist.lists?, (text | item+) }
liste = element liste { attlist.lists?, (text | item+) }
listf = element listf { attlist.lists?, (text | item+) }
item = element item { formattext }

# KEY LISTS
# TODO add attribute type = babel, xml, ISO-XXX etc 
language = element language { text | item+ }   #xml:lang ?
origlanguage = element origlanguage { text | item+ } # xml:lang ?
script = element script { text }
origscript = element origscript { text }
# NAME LISTS
attlist.author |= attribute type { "author" }?
attlist.author |= attribute gender { "sf" | "sm" | "sn" | "pf" | "pm" | "pn" | "pp" }?
attlist.author |= attlist.lists?
attlist.editor |= attribute type { "editor" | "compiler" }?
attlist.editor |= attribute gender { "sf" | "sm" | "sn" | "pf" | "pm" | "pn" | "pp" }?
attlist.editor |= attlist.lists?
author = ( element author { attlist.author, (text | person+) },
          element author { attlist.author, romanized, (text | person+) }?,
          element author { attlist.author, uniform, (text | person+) }? ) |
          ( element author { attlist.author, romanized, (text | person+) },
            element author { attlist.author, uniform, (text | person+) }? ) |
          ( element author { attlist.author, uniform, (text | person+) } )
editor = ( element editor { attlist.editor, (text | person+) },
          element editor { attlist.editor, romanized, (text | person+) }?,
          element editor { attlist.editor, uniform, (text | person+) }? ) |
          ( element editor { attlist.editor, romanized, (text | person+) },
            element editor { attlist.editor, uniform, (text | person+) }? ) |
          ( element editor { attlist.editor, uniform, (text | person+) } )
afterword = ( element afterword { attlist.lists?, (text | person+) },
             element afterword { attlist.lists?, romanized, (text | person+) }?,
             element afterword { attlist.lists?, uniform, (text | person+) }? ) |
             ( element afterword { attlist.lists?, romanized, (text | person+) },
               element afterword { attlist.lists?, uniform, (text | person+) }? ) |
             ( element afterword { attlist.lists?, uniform, (text | person+) } )
annotator = ( element annotator { attlist.lists?, (text | person+) },
             element annotator { attlist.lists?, romanized, (text | person+) }?,
             element annotator { attlist.lists?, uniform, (text | person+) }? ) |
             ( element annotator { attlist.lists?, romanized, (text | person+) },
               element annotator { attlist.lists?, uniform, (text | person+) }? ) |
             ( element annotator { attlist.lists?, uniform, (text | person+) } )
bookauthor = ( element bookauthor { attlist.lists?, (text | person+) },
              element bookauthor { attlist.lists?, romanized, (text | person+) }?,
              element bookauthor { attlist.lists?, uniform, (text | person+) }? ) |
              ( element bookauthor { attlist.lists?, romanized, (text | person+) },
                element bookauthor { attlist.lists?, uniform, (text | person+) }? ) |
              ( element bookauthor { attlist.lists?, uniform, (text | person+) } )
commentator = ( element commentator { attlist.lists?, (text | person+) },
               element commentator { attlist.lists?, romanized, (text | person+) }?,
               element commentator { attlist.lists?, uniform, (text | person+) }? ) |
               ( element commentator { attlist.lists?, romanized, (text | person+) },
                 element commentator { attlist.lists?, uniform, (text | person+) }? ) |
               ( element commentator { attlist.lists?, uniform, (text | person+) } )
foreword = ( element foreword { attlist.lists?, (text | person+) },
            element foreword { attlist.lists?, romanized, (text | person+) }?,
            element foreword { attlist.lists?, uniform, (text | person+) }? ) |
            ( element foreword { attlist.lists?, romanized, (text | person+) },
              element foreword { attlist.lists?, uniform, (text | person+) }? ) |
            ( element foreword { attlist.lists?, uniform, (text | person+) } )
holder = ( element holder { attlist.lists?, (text | person+) },
          element holder { attlist.lists?, romanized, (text | person+) }?,
          element holder { attlist.lists?, uniform, (text | person+) }? ) |
          ( element holder { attlist.lists?, romanized, (text | person+) },
            element holder { attlist.lists?, uniform, (text | person+) }? ) |
          ( element holder { attlist.lists?, uniform, (text | person+) } )
introduction = ( element introduction { attlist.lists?, (text | person+) },
                element introduction { attlist.lists?, romanized, (text | person+) }?,
                element introduction { attlist.lists?, uniform, (text | person+) }? ) |
                ( element introduction { attlist.lists?, romanized, (text | person+) },
                  element introduction { attlist.lists?, uniform, (text | person+) }? ) |
                ( element introduction { attlist.lists?, uniform, (text | person+) } )
redactor = ( element redactor { attlist.lists?, (text | person+) },
            element redactor { attlist.lists?, romanized, (text | person+) }?,
            element redactor { attlist.lists?, uniform, (text | person+) }? ) |
            ( element redactor { attlist.lists?, romanized, (text | person+) },
              element redactor { attlist.lists?, uniform, (text | person+) }? ) |
            ( element redactor { attlist.lists?, uniform, (text | person+) } )
translator = ( element translator { attlist.lists?, (text | person+) },
              element translator { attlist.lists?, romanized, (text | person+) }?,
              element translator { attlist.lists?, uniform, (text | person+) }? ) |
              ( element translator { attlist.lists?, romanized, (text | person+) },
                element translator { attlist.lists?, uniform, (text | person+) }? ) |
              ( element translator { attlist.lists?, uniform, (text | person+) } )
shortauthor = ( element shortauthor { attlist.lists?, (text | person+) },
               element shortauthor { attlist.lists?, romanized, (text | person+) }?,
               element shortauthor { attlist.lists?, uniform, (text | person+) }? ) |
               ( element shortauthor { attlist.lists?, romanized, (text | person+) },
                 element shortauthor { attlist.lists?, uniform, (text | person+) }? ) |
               ( element shortauthor { attlist.lists?, uniform, (text | person+) } )
shorteditor = ( element shorteditor { attlist.lists?, (text | person+) },
               element shorteditor { attlist.lists?, romanized, (text | person+) }?,
               element shorteditor { attlist.lists?, uniform, (text | person+) }? ) |
               ( element shorteditor { attlist.lists?, romanized, (text | person+) },
                 element shorteditor { attlist.lists?, uniform, (text | person+) }? ) |
               ( element shorteditor { attlist.lists?, uniform, (text | person+) } )
sortname = ( element sortname { attlist.lists?, (text | person+) },
            element sortname { attlist.lists?, romanized, (text | person+) }?,
            element sortname { attlist.lists?, uniform, (text | person+) }? ) |
            ( element sortname { attlist.lists?, romanized, (text | person+) },
              element sortname { attlist.lists?, uniform, (text | person+) }? ) |
            ( element sortname { attlist.lists?, uniform, (text | person+) } )
namea = ( element namea { attlist.lists?, (text | person+) },
         element namea { attlist.lists?, romanized, (text | person+) }?,
         element namea { attlist.lists?, uniform, (text | person+) }? ) |
         ( element namea { attlist.lists?, romanized, (text | person+) },
           element namea { attlist.lists?, uniform, (text | person+) }? ) |
         ( element namea { attlist.lists?, uniform, (text | person+) } )
nameb = ( element nameb { attlist.lists?, (text | person+) },
         element nameb { attlist.lists?, romanized, (text | person+) }?,
         element nameb { attlist.lists?, uniform, (text | person+) }? ) |
         ( element nameb { attlist.lists?, romanized, (text | person+) },
           element nameb { attlist.lists?, uniform, (text | person+) }? ) |
         ( element nameb { attlist.lists?, uniform, (text | person+) } )
namec = ( element namec { attlist.lists?, (text | person+) },
         element namec { attlist.lists?, romanized, (text | person+) }?,
         element namec { attlist.lists?, uniform, (text | person+) }? ) |
         ( element namec { attlist.lists?, romanized, (text | person+) },
           element namec { attlist.lists?, uniform, (text | person+) }? ) |
         ( element namec { attlist.lists?, uniform, (text | person+) } )
person = element person {
    attlist.person, 
    ( text | (first, prefix?, last, suffix?) )
  }
attlist.person |=
  attribute id { text }?,
  # ?
  attribute email { text }?,
  attribute url { text }?,
  # FIXME
  attribute yearofbirth { xsd:integer }?,
  attribute yearofdeath { xsd:integer }?,
  attribute gender { "male" | "female" }?
first = element first { text }
# initials = element initials { text }
last = element last { text }
# middle = element middle { text }
prefix = element prefix { text }
suffix = element suffix { text }
keywords |= element keywords { list {xsd:string+} | item+ }  #NB in biblatex this list is comma-separated, here it is separated by whitespace or itemized
reprintinfo = element reprintinfo { attlist.reprintinfo | (attribute note {text}?, text) }
attlist.reprintinfo |=
   attribute crossref {text},
   attribute volume {text}?,
   attribute pages {text}?,
   attribute item {text}?,
   attribute year {text}?,
   attribute note {text}?
reviews = element reviews {reviewitem*}
reviewitem = element item {attlist.review?, text?}
attlist.review |= 
   attribute type {text }?,
   attribute url {xsd:anyURI}?,
   attribute author { text }?,
   attribute note { text }?,
   attribute crossref {text }?
topics = element topics { topic* }
topic = element * {text}
remarks = element remarks {formattext|item+}
## culture
## language
## country
## person
## century
## author
## works
#########################################################
BibLaTeXML.article.standard.fields =
  author & # NB: this should be optional
  (journaltitle|journal) &
  ((((day?& month)|issue)?&year)|date) &
  editor? &
  shorteditor? &
  translator? &
  redactor? &
  annotator? &
  commentator? &
  subtitle? &
  titleaddon? &
  journalsubtitle? &
  issuetitle? &
  issuesubtitle? &
  issuetitleaddon? &
  series? &
  volume? &
  number? &
  location? & # added
  publisher? & #added
  origpublisher? & #added
  eid? &
  eprint? &
  eprinttype? &
  pages? &
  note? &
  issn? &
  addendum? &
  doi? &
# url? &  
  (urldate | (urlday , urlmonth , urlyear))?
BibLaTeXML.article.fields =
  BibLaTeXML.article.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields

article = element entry { attlist.article, (title & url? & BibLaTeXML.article.fields) }
attlist.article = attribute id {text}, attribute entrytype { "article" }, attribute type {"printed"}?
#########################################################
# url mandatory if type is electronic
article.electronic = element entry {attlist.article.electronic, (url & title & BibLaTeXML.article.fields) }
attlist.article.electronic = attribute id {text}, attribute entrytype { "article" }, attribute type {"electronic"}
#########################################################
# for reviews we need attribute ref or title or both
review = element entry { attlist.review & (crossref | title) & 
              url? & BibLaTeXML.article.fields }
attlist.review = attribute id {text}, attribute entrytype { "review" }, attribute type {"printed"}?
#########################################################
# url mandatory if type is electronic
review.electronic = element entry { attlist.review.electronic & (crossref | title) &  
              url & BibLaTeXML.article.fields }
attlist.review.electronic = attribute id {text}, attribute entrytype { "review" }, attribute type {"electronic"}
#########################################################
BibLaTeXML.book.standard.fields =
  author? & #changed
  editor? & #changed
  ((title & year) | 
   (title? & year? & crossref)) & #NEW: a book can inherit its elements from another book (e.g. individual volumes with diff titles)
  shorteditor? &
  translator? &
  redactor? &
  annotator? &
  commentator? &
  introduction? &
  foreword? &
  afterword? &
  subtitle? &
  titleaddon? &
  maintitle? &
  mainsubtitle? &
  maintitleaddon? &
  volume? &
  part? &
  edition? &
  volumes? &
  series? &
  number? &
  note? &
  publisher? &
  origpublisher? &
  location? &
  origlocation? &
  isbn? &
  oclc ? &
  lccn ? &
  issn? & #added
  chapter? &
  pages? &
  pagetotal? &
  addendum? &
  doi? &
  url? &
  eprint? &
  eprinttype? &

  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.book.fields =
  BibLaTeXML.book.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
book = element entry { attlist.book, BibLaTeXML.book.fields }
attlist.book = attribute id {text}, attribute entrytype {"book"}
#########################################################
BibLaTeXML.booklet.standard.fields =
  author? & #changed
  editor? & #changed
  title &
  year &
  subtitle? &
  titleaddon? &
  #howpublished? & -> attribute
  note? &
  location? &
  origlocation? &
  publisher? & #added
  chapter? &
  pages? &
  pagetotal? &
  addendum? &
  doi? &
  eprint? &
  eprinttype? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.booklet.fields =
  BibLaTeXML.booklet.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
booklet = element entry { attlist.booklet, BibLaTeXML.booklet.fields }
attlist.booklet = attribute id {text}, attribute entrytype {"booklet"}, attribute type { text }?, attribute howpublished {text}?
#########################################################
BibLaTeXML.collection.standard.fields =
  editor? & # changed
  author? & #changed
  title &
  year &
  shorteditor? &
  translator? &
  redactor? &
  annotator? &
  commentator? &
  introduction? &
  foreword? &
  afterword? &
  subtitle? &
  titleaddon? &
  maintitle? &
  mainsubtitle? &
  maintitleaddon? &
  volume? &
  part? &
  edition? &
  volumes? &
  series? &
  number? &
  note? &
  publisher? &
  origpublisher? &
  location? &
  origlocation? &
  isbn? &
  oclc ? &
  lccn ? &
  issn? &  #added 
  chapter? &
  pages? &
  pagetotal? &
  addendum? &
  doi? &
  eprint? &
  eprinttype? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.collection.fields =
  BibLaTeXML.collection.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
collection = element entry { attlist.collection, BibLaTeXML.collection.fields }
attlist.collection = attribute id {text}, attribute entrytype {"collection"} 
#########################################################   
BibLaTeXML.inbook.standard.fields =
  author &
  title &
  # year can be provided with crossref if it refers to multivolume work
  (((crossref | xref) & year?) | 
  (bookauthor? &
  # FIXME: this is probably too strict
  booktitle &
  maintitle? &
  mainsubtitle? &
  maintitleaddon? &
  booksubtitle? &
  booktitleaddon? &
  year & 
  editor? &
  shorteditor? &
  translator? &
  redactor? &
  annotator? &
  commentator? &
  introduction? &
  foreword? &
  afterword? &
  edition? &
  volumes? &
  series? &
  number? &
  publisher? &
  origpublisher? &
  location? &
  origlocation? &
  issn? &  #added
  isbn? &
  oclc ? &
  lccn ? )) &
  subtitle? &
  titleaddon? &
  volume? &
  part? &
  note? &
  chapter? &
  (pages | pagetotal)? &
  addendum? &
  doi? &
  eprint? &
  eprinttype? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.inbook.fields =
  BibLaTeXML.inbook.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
inbook = element entry { attlist.inbook, BibLaTeXML.inbook.fields }
attlist.inbook = attribute id {text}, attribute entrytype {"inbook"} 
#########################################################
BibLaTeXML.incollection.standard.fields =
  author &
   title &
   subtitle? &
   titleaddon? &
  # year can be provided with crossref if it refers to multivolume work
  (((crossref | xref) & year?) | 
  ( editor? & # made it optional
  # FIXME: this is probably too strict
  booktitle &
  year &
  shorteditor? &
  translator? &
  redactor? &
  annotator? &
  commentator? &
  introduction? &
  foreword? &
  afterword? &
  maintitle? &
  mainsubtitle? &
  maintitleaddon? &
  booksubtitle? &
  booktitleaddon? &
  publisher? &
  origpublisher? &
  volumes? &
  number? &
  location? &
  origlocation? &
  edition? &
  series? &
  issn? &  #added  
  isbn? &
  oclc ? &
  lccn ? )) & 
  volume? &
  part? &
  note? &
  chapter? &
  (pages | pagetotal)? &
  addendum? &
  doi? &
  eprint? &
  eprinttype? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.incollection.fields =
  BibLaTeXML.incollection.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
incollection = element entry { attlist.incollection, BibLaTeXML.incollection.fields }
attlist.incollection = attribute id {text}, attribute entrytype {"incollection"} 
#########################################################
BibLaTeXML.inproceedings.standard.fields =
  author &
  title &
  subtitle? &
  titleaddon? &
  (crossref | xref |
  (editor? &  # made it optional
  booktitle &
  year &
  shorteditor? &
  maintitle? &
  mainsubtitle? &
  maintitleaddon? &
  booksubtitle? &
  booktitleaddon? &
  venue? &
  volumes? &
  series? &
  number? &
  organization? &
  publisher? &
  origpublisher? &
  location? &
  origlocation? &
  issn? &  #added  
  isbn? &
  oclc ? &
  lccn ?)) &
  volume? &
  part? &
  note? &
  chapter? &
  (pages | pagetotal)? &
  addendum? &
  doi? &
  eprint? &
  eprinttype? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?

BibLaTeXML.inproceedings.fields =
  BibLaTeXML.inproceedings.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
inproceedings = element entry { attlist.inproceedings, BibLaTeXML.inproceedings.fields }
attlist.inproceedings = attribute id {text}, attribute entrytype {"inproceedings"}
#########################################################
BibLaTeXML.manual.standard.fields =
  (author|editor) &
  title &
  year &
  subtitle? &
  titleaddon? &
  edition? &
  version? &
  series? &
  number? &
  note? &
  organization? &
  publisher? &
  origpublisher? &
  location? &
  origlocation? &
  isbn? &
  oclc ? &
  lccn ? &
  chapter? &
  pages? &
  pagetotal? &
  addendum? &
  doi? &
  eprint? &
  eprinttype? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.manual.fields =
  BibLaTeXML.manual.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
manual = element entry { attlist.manual, BibLaTeXML.manual.fields }
attlist.manual = attribute id {text}, attribute entrytype {"manual"}, attribute type { text }?
#########################################################
BibLaTeXML.misc.standard.fields =
  (author|editor)? &
  title &
  ((day? & month? & year)|date) &
  subtitle? &
  titleaddon? &
#  howpublished? & -> attribute
  version? &
  note? &
  organization? &
  publisher? &
  origpublisher? &
  location? &
  origlocation? &
  addendum? &
  doi? &
  eprint? &
  eprinttype? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.misc.fields =
  BibLaTeXML.misc.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
misc = element entry { attlist.misc, BibLaTeXML.misc.fields }
attlist.misc = attribute id {text}, attribute entrytype {"misc"}, attribute type { text }?, attribute howpublished {text}?
#########################################################
BibLaTeXML.online.standard.fields =
  (author|editor) &
  title &
  ((day? & month? & year)|date) &
  url & 
  subtitle? &
  titleaddon? &
  version? &
  note? &
  organization? &
  addendum? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.online.fields =
  BibLaTeXML.online.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
online = element entry { attlist.online , BibLaTeXML.online.fields }
attlist.online = attribute id {text}, attribute entrytype {"online"}
#########################################################
BibLaTeXML.patent.standard.fields =
  author &
  title &
  number &
  ((day? & month? & year)|date) &
  holder? &
  subtitle? &
  titleaddon? &
  version? &
  location? &
  origlocation? &
  note? &
  addendum? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.patent.fields =
  BibLaTeXML.patent.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
patent = element entry { attlist.patent, BibLaTeXML.patent.fields }
#TODO specify all possible patent types
attlist.patent = attribute id {text}, attribute entrytype {"patent"}, att.patenttype?
att.patenttype = attribute type {
    "patent"   |
    "patentca" |
    "patentde" |
    "patentdk" |
    "patentes" |
    "patenteu" |
    "patentfr" |
    "patentit" |
    "patentno" |
    "patentse" |
    "patentuk" |
    "patentus" |
    "patreq"   |
    "patreqca" |
    "patreqde" |
    "patreqdk" |
    "patreqes" |
    "patreqeu" |
    "patreqfr" |
    "patreqit" |
    "patreqno" |
    "patreqse" |
    "patrequk" |
    "patrequs" |
    text }

#########################################################
BibLaTeXML.periodical.standard.fields =
  editor? &  # made it optional
  (journal|journaltitle) & # CHANGED from title 
  ((((day? & month)|issue)? & year)|date) &
  shorteditor? &
  introduction? &
  subtitle? &
  issuetitle? &
  issuesubtitle? &
  issuetitleaddon? &
  (pagetotal|pages)? &  # added
  series? &
  volume? &
  number? &
  note? &
  issn? &
  addendum? &
  doi? &
  eprint? &
  eprinttype? &
#  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.periodical.fields =
  BibLaTeXML.periodical.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
periodical = element entry { attlist.periodical, (url? & BibLaTeXML.periodical.fields) }
attlist.periodical = attribute id {text}, attribute entrytype {"periodical"}, attribute type {"printed"}?
#########################################################
# url mandatory if type is electronic
periodical.electronic = element entry { attlist.periodical.electronic, (url & BibLaTeXML.periodical.fields) }
attlist.periodical.electronic = attribute id {text}, attribute entrytype {"periodical"}, attribute type {"electronic"}
#########################################################
BibLaTeXML.proceedings.standard.fields =
  editor? & # made it optional
  title &
  year &
  shorteditor? &
  subtitle? &
  titleaddon? &
  maintitle? &
  mainsubtitle? &
  maintitleaddon? &
  venue? &
  volume? &
  part? &
  volumes? &
  series? &
  number? &
  note? &
  organization? &
  publisher? &
  origpublisher? &
  location? &
  origlocation? &
  isbn? &
  issn? &  #added
  oclc ? &
  lccn ? &
  chapter? &
  pages? &
  pagetotal? &
  addendum? &
  doi? &
  eprint? &
  eprinttype? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.proceedings.fields =
  BibLaTeXML.proceedings.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
proceedings = element entry { attlist.proceedings, BibLaTeXML.proceedings.fields }
attlist.proceedings = attribute id {text}, attribute entrytype {"proceedings"}
#########################################################
BibLaTeXML.report.standard.fields =
  author &
  title &
  institution &
  year &
  subtitle? &
  titleaddon? &
  series? &
  number? &
  version? &
  note? &
  location? &
  origlocation? &  
  publisher? & #added
  isrn? &
  chapter? &
  pages? &
  pagetotal? &
  addendum? &
  doi? &
  eprint? &
  eprinttype? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.report.fields =
  BibLaTeXML.report.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
report = element entry { attlist.report, BibLaTeXML.report.fields }
attlist.report = attribute id {text}, attribute entrytype {"report"}, attribute type { "techreport" | "resreport" | text }
#########################################################
BibLaTeXML.thesis.standard.fields =
  author &
  title &
  (institution|school) &
  year &
  subtitle? &
  titleaddon? &
  note? &
  location? &
  origlocation? &
  chapter? &
  pages? &
  pagetotal? &
  volumes? & #added
  isbn? & #added
  oclc ? &
  lccn ? &
  addendum? &
  doi? &
  eprint? &
  eprinttype? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
BibLaTeXML.thesis.fields =
  BibLaTeXML.thesis.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
thesis = element entry { attlist.thesis, BibLaTeXML.thesis.fields }
attlist.thesis = attribute id {text}, attribute entrytype {"thesis"}, attribute type { "phdthesis" | "mathesis" | text }
#########################################################
BibLaTeXML.unpublished.standard.fields =
  author &
  title &
  ((day? & month? & year)|date)? &
  subtitle? &
  titleaddon? &
  institution? & #added
  pagetotal? & #added
  note? &
  addendum? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
 
BibLaTeXML.unpublished.fields =
  BibLaTeXML.unpublished.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
unpublished = element entry { attlist.unpublished, BibLaTeXML.unpublished.fields }
attlist.unpublished = attribute id {text}, attribute entrytype {"unpublished"} 
#########################################################
BibLaTeXML.preprint.standard.fields =
  author &
  title &
  ((day? & month? & year)|date) &
  institution? &
  location? &
  subtitle? &
  titleaddon? &
  series? &
  pagetotal? & 
  note? &
  addendum? &
  url? &
  (urldate | (urlday & urlmonth & urlyear))?
  
BibLaTeXML.preprint.fields =
  BibLaTeXML.preprint.standard.fields &
  BibLaTeXML.common.fields &
  BibLaTeXML.additional.fields
preprint = element entry { attlist.preprint, BibLaTeXML.preprint.fields }
attlist.preprint = attribute id {text}, attribute entrytype {"preprint"}
#########################################################
software = element entry { attribute id {text}, attribute entrytype {"software"}, BibLaTeXML.misc.fields }
#########################################################
movie = element entry { attribute id {text}, attribute entrytype {"movie"}, BibLaTeXML.misc.fields }
