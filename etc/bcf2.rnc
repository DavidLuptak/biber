namespace bcf = "https://sourceforge.net/projects/biblatex"

## This is variant of the simpler schema bcf.rnc.
## It attempts to fully specify each element of a bcf file.
## This will be more useful than the generic syntax for testing purposes,
## and it will also allow us to validate the bcf file  
## before parsing and processing it with biber.

start =
  element bcf:controlfile {
    attribute version { xsd:decimal },
    element bcf:bibdata {
      element bcf:datasource { 
        ## only type="file" is supported at this stage
        attribute type { xsd:NCName }?,  
        xsd:NCName
      }+
    },
    element bcf:options {
      attribute component { "biber" },
      attribute type { "global" },
      mincrossrefs?,
      debug?,
      inputenc?,
      bibencoding?,
      alphaothers?,
      nonsortprefixes?,
      nonsortdiacritics?
      # this is for a future version
      #displaymode?
    }?,
    element bcf:options {
      attribute component { "biblatex" },
      attribute type { "global" },
      terseinits,
      useprefix,
      useauthor,
      useeditor,
      usetranslator,
      labelalpha,
      labelyear,
      singletitle,
      uniquename,
      maxnames,
      minnames,
      sorting,
      sortlos,
      labelname
    },
    element bcf:options {
      attribute component { "biblatex" },
      attribute type { biblatex.entrytypes },
      terseinits?,
      useprefix?,
      useauthor?,
      useeditor?,
      usetranslator?,
      labelalpha?,
      labelyear?,
      singletitle?,
      uniquename?,
      maxnames?,
      minnames?,
      sorting?,
      sortlos?,
      labelname?
    }*,
    element bcf:sorting {
      attribute type { "global" | biblatex.entrytypes },
      element bcf:sort {
        attribute order { xsd:integer },
        element bcf:sortitem {
          attribute final { xsd:integer }?,
          attribute order { xsd:integer },
          text
        }+
      }+
    }+,
    element bcf:section {
      attribute number { xsd:integer },
      element bcf:citekey { xsd:NCName }+
    }+
  }

biblatex.entrytypes = ( "book" | "article" | "booklet" | "collection" | "inbook" | "incollection" | "proceedings" | "inproceedings" | "manual" | "misc" | "online" | "patent" | "periodical" | "proceedings" | "report" | "thesis" | "unpublished" )

terseinits = element bcf:terseinits { "0" | "1" }
useprefix = element bcf:useprefix { "0" | "1" }
useauthor = element bcf:useauthor { "0" | "1" }
useeditor = element bcf:useeditor { "0" | "1" }
usetranslator = element bcf:usetranslator { "0" | "1" }
labelalpha = element bcf:labelalpha { "0" | "1" }
labelyear = element bcf:labelyear { "0" | "1" }
singletitle = element bcf:singletitle { "0" | "1" }
uniquename = element bcf:uniquename { "0" | "1" }
maxnames = element bcf:maxnames { xsd:integer }
minnames = element bcf:minnames { xsd:integer }
sorting = element bcf:sorting { "0" | "1" | "2" | "3" | "12" | "13" | "21" | "22" | "99" }
sortlos = element bcf:sortlos { "0" | "1" }
labelname = element bcf:labelname { labelname.item+ }
labelname.item = element bcf:item { attribute order { xsd:integer }, name.list }
name.list = ( "shortauthor" | "shorteditor" | "shorttranslator" | "author" | "editor" | "translator" )

mincrossrefs = element bcf:mincrossrefs { xsd:integer }
debug = element bcf:debug { "0" | "1" }
inputenc = element bcf:inputenc { xsd:NCName }
bibencoding = element bcf:bibencoding { xsd:NCName }
alphaothers = element bcf:alphaothers { xsd:normalizedString { pattern = "\S+"} }
## these are perl regexes
nonsortprefixes = element bcf:nonsortprefixes { 
  element bcf:item { text }+
}
nonsortdiacritics = element bcf:nonsortdiacritics { 
  element bcf:item { text }+
}

# This is for when biber/biblatex become truly multilingual:
#displaymode = ( displaymode.textual, displaymode.persons, displaymode.locations )
#
#displaymode.textual = element bcf:displaymode {
# type = global | titles | persons | locations
#  attribute type { "textual" }, 
#  element bcf:mode { 
#    attribute precedence { xsd:integer }, display.mode.textual
#  }+,
#}
#displaymode.persons = element displaymode {
# type = global | titles | persons | locations
#  attribute type { "persons" }, 
#  element bcf:mode { 
#    attribute precedence { xsd:integer }, display.mode.proper
#  }+,
#}
#displaymode.locations = element displaymode {
# type = global | titles | persons | locations
#  attribute type { "location" }, 
#  element bcf:mode { 
#    attribute precedence { xsd:integer }, display.mode.proper
#  }+,
#}
#
#display.mode.textual = { "original" | "romanized" | "translated" }
#display.mode.proper  = { "original" | "romanized" | "uniform" }

